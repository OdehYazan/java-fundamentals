/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package lab02;

import java.util.ArrayList;

public class Library {

    public static void roll(int n) {

//    int [] arrayResult = new int [n];

        ArrayList<Integer> arrayResult = new ArrayList<>();

        for (int i = 0; i < n; i++) {
            int diceFace = (int) Math.ceil(Math.random() * 6);
            arrayResult.add(diceFace);
        }

        System.out.println(arrayResult);

    }

    public static boolean containsDuplicates(int[] arr) {
//        for (int i = 0; i < arr.length; i++) {
//
//            for (int j = i+1; j < arr.length; j++) {
//                if (arr[i] == arr[j]) {
//                    System.out.println("true");
//                    break;
//                }else {
//                    System.out.println("false");
//
//                }
//
//            }
//
//        }
        for (int i = 0; i < arr.length; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] == arr[j]) {
                    return true;
                }
            }
        }

        // no duplicate is found
        return false;
    }

    public static double Average(int[] array) {
        double sum = 0;
        for (int value : array) {
            sum += value;
        }

        return sum / array.length;
    }

    public static double arraysLowestAav(int[][] arr) {

//        ArrayList <Double> avarges = new ArrayList<>();
        double[] avarges = new double[arr.length];

        double finalAv = 0;
        for (int i = 0; i < arr.length; i++) {
            double sum = 0;
            double arrLength = 0;
            for (int j = 0; j < arr[i].length; j++) {


                sum += arr[i][j];


            }


            avarges[i] = sum / arr[i].length;

        }
        finalAv=avarges[0];
        for (int i = 1; i < avarges.length; i++) {


                if (avarges[i] < finalAv) {
                    finalAv = avarges[i];
                }

        }
        return finalAv;
    }

    public boolean someLibraryMethod() {
        return true;

    }

}