/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package lab02;

import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    Library fun = new Library();
    @Test
    void someLibraryMethodReturnsTrue() {
        Library classUnderTest = new Library();
        assertTrue(classUnderTest.someLibraryMethod(), "someLibraryMethod should return 'true'");
    }

        @Test
    public void testroll() {

        int numRolls = 4;
        assertEquals(numRolls, fun.roll(numRolls).length, "The size test passed");
    }
     @Test
    public void testAverage(){
        int [] arr ={1,1,1};
        int av= 1;
        assertEquals( av, fun.average(arr));
    }

    @Test
    public void testContainsDuplicate() {
        int[] testArr = new int[]{1, 2, 3, 4, 4, 5};

                assertTrue(fun.containsDuplicates(testArr), "someLibraryMethod should return 'true'");

    }
@Test
public void testArraysLowestAav() {
    int[][] testArr = new int[][]{
            {66, 64, 58, 65, 71, 57, 60}, // 63.0
            {57, 65, 65, 70, 72, 65, 51}, // 63.5714285714
            {55, 54, 60, 53, 59, 57, 61}, // 57.0
            {65, 56, 55, 52, 55, 62, 57} // 57.4285714286
    };
    assertArrayEquals(Library.arraysLowestAav(testArr), testArr[2], "lowest average is arr at index 2");
}
//    @Test
//    public void testWeatherData_OneEmptyWeek() {
//        int[][] weeklyMonthTemperatures = {
//                {},
//                {57, 65, 65, 70, 72, 65, 51},
//                {55, 54, 60, 53, 59, 57, 61},
//                {65, 56, 55, 52, 55, 62, 57}
//        };
//
//        assertEquals(
//                "High: 72\n" +
//                        "Low: 51\n" +
//                        "Never saw temperature: 58\n" +
//                        "Never saw temperature: 63\n" +
//                        "Never saw temperature: 64\n" +
//                        "Never saw temperature: 66\n" +
//                        "Never saw temperature: 67\n" +
//                        "Never saw temperature: 68\n" +
//                        "Never saw temperature: 69\n" +
//                        "Never saw temperature: 71\n",
//                fun.weatherData(weeklyMonthTemperatures),"OneEmptyWeek : incorrect values"
//        );
//    }
    @Test
    public void testTally_OneWinner() {
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");

        assertEquals(

                "Bush received the most votes!",
                fun.tally(votes),"OneWinner should return 'Bush'"
        );
    }

}
